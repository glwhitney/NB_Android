Android Development Tutorial ## - Title

***** Tutorial Notes

***** manifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.thenewboston.unboundservicetest">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <service android:name=".MyService"
            android:enabled="true"
            android:exported="true" >
        </service>
    </application>

</manifest>

***** MainActivity.java
package com.thenewboston.unboundservicetest;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {
    private int clickCounter = 0;
    private String textViewText ="";
    TextView counterTextView;
    Button button1, button2;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        counterTextView = (TextView)findViewById(R.id.clickCounter_textView);
        button1 = (Button) findViewById(R.id.button1);
        button2 = (Button) findViewById(R.id.button2);
    }
    public void button1Clicked(View view){
        counterTextView.setText("Clicks: " + ++clickCounter);// inc before using
    }

    public void startServiceClicked(View view){
        Intent intent = new Intent(this,MyService.class);
        startService(intent);
    }
}

***** activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="com.thenewboston.unboundservicetest.MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textAppearance="?android:attr/textAppearanceLarge"
        android:text="Click Counter"
        android:id="@+id/clickCounter_textView"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="91dp" />

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Click Me"
        android:id="@+id/button1"
        android:layout_centerVertical="true"
        android:layout_centerHorizontal="true"
        android:onClick="button1Clicked" />

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Start Service"
        android:id="@+id/button2"
        android:layout_below="@+id/button1"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="85dp"
        android:onClick="startServiceClicked"
        android:nestedScrollingEnabled="true" />
</RelativeLayout>

***** MyService.java
package com.thenewboston.unboundservicetest;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;

public class MyService extends Service {
    public static final String TAG = "MyServiceLog";

    public MyService() {
    }
    @Override public void onCreate() {
        Log.i(TAG, "Service onCreate");
    }
    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        Log.i(TAG,"L42 onStartCommand called");
        final int currentId = startId;

        Runnable r = new Runnable() {
            @Override
            public void run() {
                // What do you want the thread to do
                //identify the thread
                Log.i(TAG, "Service ID = " + currentId);
                for (int i = 0; i < 5; i++) {
                    long futureTime = (System.currentTimeMillis() + 5000);// 5 sec

                    while (System.currentTimeMillis() < futureTime) {
                        // Don't need to sync when you are not using a thread e,g, Tutorial 39
                        synchronized (this) {
                            try {
                                wait(futureTime - System.currentTimeMillis());
                                Log.i(TAG, "L42 ID " + currentId +"  loop "+ i + " finished");
                            } catch (Exception e) {
                                //not printing stack trace
                            }
                        }
                    }
                }
                stopSelf();
            }
        };
        // start the thread
        Thread less42Thread = new Thread(r);
        less42Thread.start();
        return Service.START_STICKY; // restarts the service if it gets destroyed.
    }

    @Override
    public void onDestroy() {
        Log.i(TAG,"L42 onDestroy called");
    }

    @Override
    public IBinder onBind(Intent arg0) {
        Log.i(TAG, "Inside MyService IBinder onBind"); return null;
    }
}

