[source code] Android Development Tutorials 18 thru 20 - Events

***** Tutorial Notes
** 18 - Event Handling- code available
//Overview//
All the Activity Lifecycle callback methods were generated by Android. Here we are going to learn how to listen for a click event on a button. We are also going to change the text in a TextView as a visual clue that we responded to the event.

// Tutorial//
1. Start with Empty Activity. Delete Hello World.
	a. Add large text and a button. Give them both ids. Convert Strings to resource.
NOTE: The ids Bucky chose both use the standard of ending the id with the object type i.e. buckysText, and buckysButton 

2. In the java file
3. import android.view.View; import android.widget.Button; import android.widget.TextView;
4. Discussed Event Listener - listen for an event, and the Callback Method - what to do

** 19- Event Listener and Callback Method
1. Listener goes in onCreate()
	a. get reference
	b. setOnClickListener()is the interface (callback Method)goes inside Anonymous inner class
2. Get a reference to the text and use setText()
NOTE: You don't have to use setOnclickListener if you use the attribute android:onClick( ) in the button element. But you still need a class that implements the Button.onClickListener interface.
For example, if you have a bunch of buttons then you might want to define one inner class that implements the interface.


** 20 - Multiple Event Listeners
1. Multiple events on the same button. Start with the code from 19.
2. Long click is holding down more than second.
3. New listener set.onlongclick listener, in oncreate but outside of the other listener.
	a. Needs a return statement. Return true means the event was handled (consumend). Otherwise Andoid calls the click listener too.

//Null warning//
The click events could return null, so Studio highligts them in yellow. Just  surround them with:
	If (buckysText !null)


***** manifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.thenewboston.smartbutton">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

***** MainActivity.java
package com.thenewboston.smartbutton;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button buckysButton = (Button)findViewById(R.id.buckysButton);

        buckysButton.setOnClickListener(
                new Button.OnClickListener(){
                    public void onClick(View v){
                        TextView buckysText = (TextView)findViewById(R.id.buckysText);
                        buckysText.setText("Good job Hoss!");
                    }
                }
        );
        // Tutorial 20 longClickListener
        buckysButton.setOnLongClickListener(
                new Button.OnLongClickListener(){
                    public boolean onLongClick(View v){
                        TextView buckysText = (TextView)findViewById(R.id.buckysText);
                        buckysText.setText("Holy carp, that was a long one!");
                        return true;
                    }
                }
        );
    }
}

***** activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="com.thenewboston.smartbutton.MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textAppearance="?android:attr/textAppearanceLarge"
        android:text="@string/message_text"
        android:id="@+id/buckysText"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="98dp" />

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/button_text"
        android:id="@+id/buckysButton"
        android:layout_centerVertical="true"
        android:layout_centerHorizontal="true" />
</RelativeLayout>


***** strings.xml
<resources>
    <string name="app_name">SmartButton</string>
    <string name="message_text">Hello</string>
    <string name="button_text">Click Me Hass</string>
</resources>
