[source code] Android Development Tutorial 34 - Transitions

***** Tutorial Notes
**34 - Animations and Transitions

//Overview//
The goal here is to make a button move from top-left to bottom right when you touch the screen.
I started with an Empty Activity because I didn't need the overhead of the Basic Activity.

//Tutorial//
1. Start an Empty Activity, Don't choose Material Dark for your theme.
	a. Give the layout and button Ids so you can reference them.
2. MainActivity
	a. Imports
	b. Create layout viewGroup reference
	c. Create the OnTouchListener()
	d. Create the moveButton method
		i. Change the layout rules for the button position
		ii. Change the size rules for the button size
	e. Button moved and changed in size but just appeared in the new location without a smooth transition
		i. Add a transition manager, with default transition.

NOTE: Bucky said he was going to teach Scenes in the next tutorial but he did not. If you want to know about this subject then I suggest buying the latest "Android Studio Development Essentials" eBook, by Neil Smyth.  You can get a version on Google Play but to get a PDF version I suggest eBookFrenzy.com


***** manifest.xml

***** MainActivity.java
package com.thenewboston.tranny;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.transition.TransitionManager;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;

public class MainActivity extends AppCompatActivity {
    ViewGroup buckysLayout;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        buckysLayout = (ViewGroup)findViewById(R.id.buckysLayout);
        buckysLayout.setOnTouchListener(
                new RelativeLayout.OnTouchListener() {
                    @Override
                    public boolean onTouch(View v, MotionEvent event) {
                        moveButton();
                        return true;// touch event handled
                    }
                }
        );
    }

    public void moveButton(){
        View buckyButton = findViewById(R.id.buckyButton);
        TransitionManager.beginDelayedTransition(buckysLayout);

        // Change the position of the button
        RelativeLayout.LayoutParams positionRules = new RelativeLayout.LayoutParams(
                RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
        positionRules.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM, RelativeLayout.TRUE);
        positionRules.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, RelativeLayout.TRUE);

        buckyButton.setLayoutParams(positionRules);

        //Change the size of the button
        ViewGroup.LayoutParams sizeRules = buckyButton.getLayoutParams();
        sizeRules.width = 450;
        sizeRules.height= 300;

        buckyButton.setLayoutParams(sizeRules);
    }

}

***** activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="com.thenewboston.tranny.MainActivity"
    android:id="@+id/buckysLayout">

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="New Button"
        android:id="@+id/buckyButton"
        android:layout_alignParentTop="true"
        android:layout_alignParentStart="true" />
</RelativeLayout>

***** strings.xml
